{
  "contractName": "FrenzyFish",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "_orderPosition",
          "type": "uint256"
        }
      ],
      "name": "BuyFish",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetRodDetails",
      "outputs": [
        {
          "name": "_level",
          "type": "uint256"
        },
        {
          "name": "_power",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ListMarketOrders",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "UpgradeFishRod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "_orderPosition",
          "type": "uint256"
        }
      ],
      "name": "CancelSellFishOrder",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "UsersRod",
      "outputs": [
        {
          "name": "Level",
          "type": "uint256"
        },
        {
          "name": "Power",
          "type": "uint256"
        },
        {
          "name": "CurrentPrice",
          "type": "uint256"
        },
        {
          "name": "NextPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "FirstUserInitialRod",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "position",
          "type": "uint256"
        }
      ],
      "name": "SellFish",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SellOrders",
      "outputs": [
        {
          "name": "SellFish",
          "type": "address"
        },
        {
          "name": "Seller",
          "type": "address"
        },
        {
          "name": "OwnerFishPosition",
          "type": "uint256"
        },
        {
          "name": "IsFilled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Fishes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "Fishing",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ListAllFishes",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "fish",
          "type": "address"
        }
      ],
      "name": "GetFishDetails",
      "outputs": [
        {
          "name": "_rarity",
          "type": "uint256"
        },
        {
          "name": "_weight",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        },
        {
          "name": "_onOrder",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"BuyFish\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetRodDetails\",\"outputs\":[{\"name\":\"_level\",\"type\":\"uint256\"},{\"name\":\"_power\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ListMarketOrders\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ListAllFishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Fishing\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"UpgradeFishRod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"CancelSellFishOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"fish\",\"type\":\"address\"}],\"name\":\"GetFishDetails\",\"outputs\":[{\"name\":\"_rarity\",\"type\":\"uint256\"},{\"name\":\"_weight\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_onOrder\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"UsersRod\",\"outputs\":[{\"name\":\"Level\",\"type\":\"uint256\"},{\"name\":\"Power\",\"type\":\"uint256\"},{\"name\":\"CurrentPrice\",\"type\":\"uint256\"},{\"name\":\"NextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"FirstUserInitialRod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"SellFish\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SellOrders\",\"outputs\":[{\"name\":\"SellFish\",\"type\":\"address\"},{\"name\":\"Seller\",\"type\":\"address\"},{\"name\":\"OwnerFishPosition\",\"type\":\"uint256\"},{\"name\":\"IsFilled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Fishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/denny/Code/FishingFrenzy/contracts/FrenzyFish.sol\":\"FrenzyFish\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/denny/Code/FishingFrenzy/contracts/Fish.sol\":{\"keccak256\":\"0xfdb8c5c081ef532aee2e1e934df728ec3623ef7eab9499162c9107c12037fb8d\",\"urls\":[\"bzzr://99048f34862c72e6ec5332095ef9d652c9077f4517ad8456ded435a84fb5c44e\"]},\"/home/denny/Code/FishingFrenzy/contracts/FishRod.sol\":{\"keccak256\":\"0x49827ea526bd8529e11117191b1ae363ac9e7cef725b171da2bfcb1d2604dbc1\",\"urls\":[\"bzzr://1ae3c7b811a89b54e7cea235808159333f6dbf68c0852691994b3ae804d55457\"]},\"/home/denny/Code/FishingFrenzy/contracts/FrenzyFish.sol\":{\"keccak256\":\"0xd0e4fbd3d8b0a05f9f6f2a913b7285c3896e21bc39adace24cf7c77f0e9f02df\",\"urls\":[\"bzzr://f40fbf25ceb6e3a7f7bf8110eec5efdf172626789012871ec829c3a10df61720\"]},\"/home/denny/Code/FishingFrenzy/contracts/Market.sol\":{\"keccak256\":\"0x05c9fa2710e85abe9a6396bc78a54de7429e8621d12d75dfcb2451cf80b1707f\",\"urls\":[\"bzzr://29694048be812dec44852ed0cb10e0daa3b81a31b16d398a9be60ffb078388c0\"]},\"/home/denny/Code/FishingFrenzy/contracts/SafeMath.sol\":{\"keccak256\":\"0x4ccf2d7b51873db1ccfd54ca2adae5eac3b184f9699911ed4490438419f1c690\",\"urls\":[\"bzzr://1604f5b6d6e916c154efd8c6720cda069e5ba32dfa0a9dedf2b42e5b02d07f89\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612d46806100206000396000f3fe608060405260043610620000d3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ac1449014620000d85780630b5d5b54146200014f578063267dbaa3146200018b57806328347b6c14620002da5780636765bc16146200034b57806392a8a78914620003a55780639aa0d92514620003bf5780639e96c3ad1462000436578063a089dcde14620004b8578063a5e12aef1462000536578063a6149f091462000568578063cb5eeae714620005df578063ce4f8d4114620006a3575b600080fd5b348015620000e557600080fd5b506200013560048036036040811015620000fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000742565b604051808215151515815260200191505060405180910390f35b3480156200015c57600080fd5b506200016762000d68565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156200019857600080fd5b50620001a362000e3e565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b83811015620001f4578082015181840152602081019050620001d7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015620002385780820151818401526020810190506200021b565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156200027c5780820151818401526020810190506200025f565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015620002c0578082015181840152602081019050620002a3565b505050509050019850505050505050505060405180910390f35b348015620002e757600080fd5b50620002f262001107565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620003375780820151818401526020810190506200031a565b505050509050019250505060405180910390f35b3480156200035857600080fd5b5062000363620011d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620003b257600080fd5b50620003bd620013e6565b005b348015620003cc57600080fd5b506200041c60048036036040811015620003e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620016d8565b604051808215151515815260200191505060405180910390f35b3480156200044357600080fd5b5062000489600480360360208110156200045c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001b48565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b348015620004c557600080fd5b506200050b60048036036020811015620004de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001c1b565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156200054357600080fd5b506200054e62001c4b565b604051808215151515815260200191505060405180910390f35b3480156200057557600080fd5b50620005c5600480360360408110156200058e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001dc6565b604051808215151515815260200191505060405180910390f35b348015620005ec57600080fd5b506200061c600480360360208110156200060557600080fd5b810190808035906020019092919050505062002228565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390f35b348015620006b057600080fd5b506200070060048036036040811015620006c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620022b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200076b57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620008645750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156200082357600080fd5b505afa15801562000838573d6000803e3d6000fd5b505050506040513d60208110156200084f57600080fd5b81019080805190602001909291905050501515145b1515620008d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200090057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515620009bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f776e65722043616e277420427579000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600183815481101515620009d357fe5b906000526020600020906004020160030160009054906101000a900460ff16151514151562000a6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f853f657336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000b0657600080fd5b505af115801562000b1b573d6000803e3d6000fd5b505050506040513d602081101562000b3257600080fd5b81019080805190602001909291905050501562000d5d57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506002600060018481548110151562000c0057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018381548110151562000c7c57fe5b90600052602060002090600402016002015481548110151562000c9b57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018281548110151562000cd857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062000d62565b600090505b92915050565b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060806060806000600180549050905060608160405190808252806020026020018201604052801562000e805781602001602082028038833980820191505090505b50905060608260405190808252806020026020018201604052801562000eb55781602001602082028038833980820191505090505b50905060608360405190808252806020026020018201604052801562000eea5781602001602082028038833980820191505090505b50905060608460405190808252806020026020018201604052801562000f1f5781602001602082028038833980820191505090505b50905060008090505b600180549050811015620010ef5760018181548110151562000f4657fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858281518110151562000f8757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018181548110151562000fd357fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684828151811015156200101457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001818154811015156200106057fe5b90600052602060002090600402016002015483828151811015156200108157fe5b90602001906020020181815250506001818154811015156200109f57fe5b906000526020600020906004020160030160009054906101000a900460ff168282815181101515620010cd57fe5b9060200190602002019015159081151581525050808060010191505062000f28565b50838383839850985098509850505050505090919293565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620011ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200117f575b5050505050905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415151562001290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f526f64204d757374206265204e6565646564000000000000000000000000000081525060200191505060405180910390fd5b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154620012df6200238e565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f08015801562001339573d6000803e3d6000fd5b509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508091505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515156200143557fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050620014d260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506200156e60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200164a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200170157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620017fa5750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620017b957600080fd5b505afa158015620017ce573d6000803e3d6000fd5b505050506040513d6020811015620017e557600080fd5b81019080805190602001909291905050501515145b15156200186f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200188357fe5b906000526020600020906004020160030160009054906101000a900460ff1615151415156200191a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200194157fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620019ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001a6457600080fd5b505af115801562001a79573d6000803e3d6000fd5b505050506040513d602081101562001a9057600080fd5b8101908080519060200190929190505050151562001b3d5760018281548110151562001ab857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062001b42565b600090505b92915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160806040518083038186803b15801562001bb157600080fd5b505afa15801562001bc6573d6000803e3d6000fd5b505050506040513d608081101562001bdd57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505093509350935093509193509193565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141562001dbe5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001905062001dc3565b600090505b90565b60008273ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151562001e2c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562001ee3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b600015158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562001f4a57600080fd5b505afa15801562001f5f573d6000803e3d6000fd5b505050506040513d602081101562001f7657600080fd5b8101908080519060200190929190505050151514151562001fff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c726561647920696e204f726465720000000000000000000000000000000081525060200191505060405180910390fd5b620020096200239f565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505060008160600190151590811515815250506001819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050508373ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620021e257600080fd5b505af1158015620021f7573d6000803e3d6000fd5b505050506040513d60208110156200220e57600080fd5b810190808051906020019092919050505091505092915050565b6001818154811015156200223857fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600260205281600052604060002081815481101515620022d157fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080828401905083811015151562002384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60405161092480620023f783390190565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe608060405234801561001057600080fd5b506040516040806109248339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a661011f640100000000026401000000009004565b6001600001819055506100c781610170640100000000026401000000009004565b60018001819055506100f16001800154600160000154610196640100000000026401000000009004565b6001600301819055506000600160040160006101000a81548160ff02191690831515021790555050506102d1565b60008061013d6001600a6101c0640100000000026401000000009004565b905060058111151561015357600191505061016d565b60088111151561016757600291505061016d565b60039150505b90565b600061018f6001600384026101c0640100000000026401000000009004565b9050919050565b60006101b882846102046401000000000261054b179091906401000000009004565b905092915050565b600082838303426040516020018082815260200191505060405160208183030381529060405280519060200120600190048115156101fa57fe5b0601905092915050565b60008083141561021757600090506102cb565b6000828402905082848281151561022a57fe5b041415156102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b610644806102e06000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313c23f411461009e57806344c57bc6146100cd5780636ff8ec3614610144578063a0bc484f14610193578063b4f6f509146101ec578063be889f4b14610217578063cc2e8cca14610246578063d1353c681461028a578063f853f657146102e3575b600080fd5b3480156100aa57600080fd5b506100b361034c565b604051808215151515815260200191505060405180910390f35b3480156100d957600080fd5b506100e2610366565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b34801561015057600080fd5b5061017d6004803603602081101561016757600080fd5b81019080803590602001909291905050506103b7565b6040518082815260200191505060405180910390f35b34801561019f57600080fd5b506101d6600480360360408110156101b657600080fd5b8101908080359060200190929190803590602001909291905050506103ce565b6040518082815260200191505060405180910390f35b3480156101f857600080fd5b50610201610412565b6040518082815260200191505060405180910390f35b34801561022357600080fd5b5061022c610454565b604051808215151515815260200191505060405180910390f35b34801561025257600080fd5b5061025b61049e565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b34801561029657600080fd5b506102cd600480360360408110156102ad57600080fd5b8101908080359060200190929190803590602001909291905050506104d6565b6040518082815260200191505060405180910390f35b3480156102ef57600080fd5b506103326004803603602081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f3565b604051808215151515815260200191505060405180910390f35b6000600160040160009054906101000a900460ff16905090565b60018060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60006103c76001600384026103ce565b9050919050565b6000828383034260405160200180828152602001915050604051602081830303815290604052805190602001206001900481151561040857fe5b0601905092915050565b6000806104216001600a6103ce565b9050600581111515610437576001915050610451565b60088111151561044b576002915050610451565b60039150505b90565b6000600160040160009054906101000a900460ff1615600160040160006101000a81548160ff021916908315150217905550600160040160009054906101000a900460ff16905090565b6000806000806001600001546001800154600160030154600160040160009054906101000a900460ff16935093509350935090919293565b60006104eb828461054b90919063ffffffff16565b905092915050565b600081600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610541610454565b5060019050919050565b60008083141561055e5760009050610612565b6000828402905082848281151561057157fe5b0414151561060d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820b55eef01651793e7b3d83b2c2f783e391fe233f785302a84a322ed51274757fd0029a165627a7a72305820bb6df0a1ad592902727112a2a20d8db7742bfb596986764ce9738de34e9e52560029",
  "deployedBytecode": "0x608060405260043610620000d3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ac1449014620000d85780630b5d5b54146200014f578063267dbaa3146200018b57806328347b6c14620002da5780636765bc16146200034b57806392a8a78914620003a55780639aa0d92514620003bf5780639e96c3ad1462000436578063a089dcde14620004b8578063a5e12aef1462000536578063a6149f091462000568578063cb5eeae714620005df578063ce4f8d4114620006a3575b600080fd5b348015620000e557600080fd5b506200013560048036036040811015620000fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000742565b604051808215151515815260200191505060405180910390f35b3480156200015c57600080fd5b506200016762000d68565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156200019857600080fd5b50620001a362000e3e565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b83811015620001f4578082015181840152602081019050620001d7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015620002385780820151818401526020810190506200021b565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156200027c5780820151818401526020810190506200025f565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015620002c0578082015181840152602081019050620002a3565b505050509050019850505050505050505060405180910390f35b348015620002e757600080fd5b50620002f262001107565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620003375780820151818401526020810190506200031a565b505050509050019250505060405180910390f35b3480156200035857600080fd5b5062000363620011d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620003b257600080fd5b50620003bd620013e6565b005b348015620003cc57600080fd5b506200041c60048036036040811015620003e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620016d8565b604051808215151515815260200191505060405180910390f35b3480156200044357600080fd5b5062000489600480360360208110156200045c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001b48565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b348015620004c557600080fd5b506200050b60048036036020811015620004de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001c1b565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156200054357600080fd5b506200054e62001c4b565b604051808215151515815260200191505060405180910390f35b3480156200057557600080fd5b50620005c5600480360360408110156200058e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001dc6565b604051808215151515815260200191505060405180910390f35b348015620005ec57600080fd5b506200061c600480360360208110156200060557600080fd5b810190808035906020019092919050505062002228565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390f35b348015620006b057600080fd5b506200070060048036036040811015620006c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620022b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200076b57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620008645750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156200082357600080fd5b505afa15801562000838573d6000803e3d6000fd5b505050506040513d60208110156200084f57600080fd5b81019080805190602001909291905050501515145b1515620008d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200090057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515620009bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f776e65722043616e277420427579000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600183815481101515620009d357fe5b906000526020600020906004020160030160009054906101000a900460ff16151514151562000a6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f853f657336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000b0657600080fd5b505af115801562000b1b573d6000803e3d6000fd5b505050506040513d602081101562000b3257600080fd5b81019080805190602001909291905050501562000d5d57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506002600060018481548110151562000c0057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018381548110151562000c7c57fe5b90600052602060002090600402016002015481548110151562000c9b57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018281548110151562000cd857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062000d62565b600090505b92915050565b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060806060806000600180549050905060608160405190808252806020026020018201604052801562000e805781602001602082028038833980820191505090505b50905060608260405190808252806020026020018201604052801562000eb55781602001602082028038833980820191505090505b50905060608360405190808252806020026020018201604052801562000eea5781602001602082028038833980820191505090505b50905060608460405190808252806020026020018201604052801562000f1f5781602001602082028038833980820191505090505b50905060008090505b600180549050811015620010ef5760018181548110151562000f4657fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858281518110151562000f8757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018181548110151562000fd357fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684828151811015156200101457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001818154811015156200106057fe5b90600052602060002090600402016002015483828151811015156200108157fe5b90602001906020020181815250506001818154811015156200109f57fe5b906000526020600020906004020160030160009054906101000a900460ff168282815181101515620010cd57fe5b9060200190602002019015159081151581525050808060010191505062000f28565b50838383839850985098509850505050505090919293565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620011ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200117f575b5050505050905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415151562001290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f526f64204d757374206265204e6565646564000000000000000000000000000081525060200191505060405180910390fd5b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154620012df6200238e565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f08015801562001339573d6000803e3d6000fd5b509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508091505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515156200143557fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050620014d260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506200156e60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200164a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200170157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620017fa5750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620017b957600080fd5b505afa158015620017ce573d6000803e3d6000fd5b505050506040513d6020811015620017e557600080fd5b81019080805190602001909291905050501515145b15156200186f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200188357fe5b906000526020600020906004020160030160009054906101000a900460ff1615151415156200191a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200194157fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620019ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001a6457600080fd5b505af115801562001a79573d6000803e3d6000fd5b505050506040513d602081101562001a9057600080fd5b8101908080519060200190929190505050151562001b3d5760018281548110151562001ab857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062001b42565b600090505b92915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160806040518083038186803b15801562001bb157600080fd5b505afa15801562001bc6573d6000803e3d6000fd5b505050506040513d608081101562001bdd57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505093509350935093509193509193565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141562001dbe5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001905062001dc3565b600090505b90565b60008273ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151562001e2c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562001ee3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b600015158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562001f4a57600080fd5b505afa15801562001f5f573d6000803e3d6000fd5b505050506040513d602081101562001f7657600080fd5b8101908080519060200190929190505050151514151562001fff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c726561647920696e204f726465720000000000000000000000000000000081525060200191505060405180910390fd5b620020096200239f565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505060008160600190151590811515815250506001819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050508373ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620021e257600080fd5b505af1158015620021f7573d6000803e3d6000fd5b505050506040513d60208110156200220e57600080fd5b810190808051906020019092919050505091505092915050565b6001818154811015156200223857fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600260205281600052604060002081815481101515620022d157fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080828401905083811015151562002384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60405161092480620023f783390190565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe608060405234801561001057600080fd5b506040516040806109248339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a661011f640100000000026401000000009004565b6001600001819055506100c781610170640100000000026401000000009004565b60018001819055506100f16001800154600160000154610196640100000000026401000000009004565b6001600301819055506000600160040160006101000a81548160ff02191690831515021790555050506102d1565b60008061013d6001600a6101c0640100000000026401000000009004565b905060058111151561015357600191505061016d565b60088111151561016757600291505061016d565b60039150505b90565b600061018f6001600384026101c0640100000000026401000000009004565b9050919050565b60006101b882846102046401000000000261054b179091906401000000009004565b905092915050565b600082838303426040516020018082815260200191505060405160208183030381529060405280519060200120600190048115156101fa57fe5b0601905092915050565b60008083141561021757600090506102cb565b6000828402905082848281151561022a57fe5b041415156102c6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b610644806102e06000396000f3fe608060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313c23f411461009e57806344c57bc6146100cd5780636ff8ec3614610144578063a0bc484f14610193578063b4f6f509146101ec578063be889f4b14610217578063cc2e8cca14610246578063d1353c681461028a578063f853f657146102e3575b600080fd5b3480156100aa57600080fd5b506100b361034c565b604051808215151515815260200191505060405180910390f35b3480156100d957600080fd5b506100e2610366565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b34801561015057600080fd5b5061017d6004803603602081101561016757600080fd5b81019080803590602001909291905050506103b7565b6040518082815260200191505060405180910390f35b34801561019f57600080fd5b506101d6600480360360408110156101b657600080fd5b8101908080359060200190929190803590602001909291905050506103ce565b6040518082815260200191505060405180910390f35b3480156101f857600080fd5b50610201610412565b6040518082815260200191505060405180910390f35b34801561022357600080fd5b5061022c610454565b604051808215151515815260200191505060405180910390f35b34801561025257600080fd5b5061025b61049e565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b34801561029657600080fd5b506102cd600480360360408110156102ad57600080fd5b8101908080359060200190929190803590602001909291905050506104d6565b6040518082815260200191505060405180910390f35b3480156102ef57600080fd5b506103326004803603602081101561030657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506104f3565b604051808215151515815260200191505060405180910390f35b6000600160040160009054906101000a900460ff16905090565b60018060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b60006103c76001600384026103ce565b9050919050565b6000828383034260405160200180828152602001915050604051602081830303815290604052805190602001206001900481151561040857fe5b0601905092915050565b6000806104216001600a6103ce565b9050600581111515610437576001915050610451565b60088111151561044b576002915050610451565b60039150505b90565b6000600160040160009054906101000a900460ff1615600160040160006101000a81548160ff021916908315150217905550600160040160009054906101000a900460ff16905090565b6000806000806001600001546001800154600160030154600160040160009054906101000a900460ff16935093509350935090919293565b60006104eb828461054b90919063ffffffff16565b905092915050565b600081600160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610541610454565b5060019050919050565b60008083141561055e5760009050610612565b6000828402905082848281151561057157fe5b0414151561060d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820b55eef01651793e7b3d83b2c2f783e391fe233f785302a84a322ed51274757fd0029a165627a7a72305820bb6df0a1ad592902727112a2a20d8db7742bfb596986764ce9738de34e9e52560029",
  "sourceMap": "92:932:2:-;;;152:29;8:9:-1;5:2;;;30:1;27;20:12;5:2;152:29:2;92:932;;;;;;",
  "deployedSourceMap": "92:932:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:707:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1621:707:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1621:707:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1251:199:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1251:199:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2333:739:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2333:739:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2333:739:3;;;;;;;;;;;;;;;;;;;;;;;606:107:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;606:107:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;606:107:2;;;;;;;;;;;;;;;;;280:270;;8:9:-1;5:2;;;30:1;27;20:12;5:2;280:270:2;;;;;;;;;;;;;;;;;;;;;;;;;;;797:449:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;797:449:1;;;;;;1073:543:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1073:543:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1073:543:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;768:166:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;768:166:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;768:166:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;359:38:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;359:38:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;359:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;436:323;;8:9:-1;5:2;;;30:1;27;20:12;5:2;436:323:1;;;;;;;;;;;;;;;;;;;;;;;;;;;575:493:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;575:493:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;575:493:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;400:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;400:32:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;400:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;438:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;438:42:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;438:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1621:707;1693:4;1754:5;1717:42;;:10;1728:14;1717:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:42;;;:82;;;;;1795:4;1763:36;;1768:5;1763:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1763:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1763:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1763:28:3;;;;;;;;;;;;;;;;:36;;;1717:82;1709:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1874:10;1837:47;;:10;1848:14;1837:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1829:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1960:5;1921:44;;:10;1932:14;1921:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:44;;;1913:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2008:5;2003:27;;;2031:10;2003:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2003:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2003:39:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2003:39:3;;;;;;;;;;;;;;;;1999:323;;;2058:6;:18;2065:10;2058:18;;;;;;;;;;;;;;;2082:5;2058:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2058:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:6;:41;2116:10;2127:14;2116:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;2109:41;;;;;;;;;;;;;;;2151:10;2162:14;2151:26;;;;;;;;;;;;;;;;;;;;:44;;;2109:87;;;;;;;;;;;;;;;;;;2102:94;;;;;;;;;;;2217:10;2228:14;2217:26;;;;;;;;;;;;;;;;;;;;;2210:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2264:4;2257:11;;;;1999:323;2306:5;2299:12;;1621:707;;;;;:::o;1251:199:1:-;1296:14;1311;1326;1358:8;:20;1367:10;1358:20;;;;;;;;;;;;;;;:26;;;1385:8;:20;1394:10;1385:20;;;;;;;;;;;;;;;:26;;;1412:8;:20;1421:10;1412:20;;;;;;;;;;;;;;;:30;;;1351:92;;;;;;1251:199;;;:::o;2333:739:3:-;2381:16;2399;2416;2433:13;2458:14;2475:10;:17;;;;2458:34;;2502:26;2545:6;2531:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2531:21:3;;;;2502:50;;2562:24;2603:6;2589:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2589:21:3;;;;2562:48;;2620:35;2672:6;2658:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2658:21:3;;;;2620:59;;2689:23;2726:6;2715:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2715:18:3;;;;2689:44;;2747:9;2759:1;2747:13;;2743:258;2765:10;:17;;;;2761:1;:21;2743:258;;;2813:10;2824:1;2813:13;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;2798:9;2808:1;2798:12;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;2858:10;2869:1;2858:13;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;2845:7;2853:1;2845:10;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;2912:10;2923:1;2912:13;;;;;;;;;;;;;;;;;;;;:31;;;2888:18;2907:1;2888:21;;;;;;;;;;;;;;;;;:55;;;;;2968:10;2979:1;2968:13;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;2953:9;2963:1;2953:12;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;2784:3;;;;;;;2743:258;;;;3018:9;3028:7;3036:18;3055:9;3010:55;;;;;;;;;;;;;2333:739;;;;:::o;606:107:2:-;651:16;687:6;:18;694:10;687:18;;;;;;;;;;;;;;;680:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;606:107;:::o;280:270::-;314:7;370:1;340:8;:20;349:10;340:20;;;;;;;;;;;;;;;:26;;;:31;;332:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;403:15;438:10;449:8;:20;458:10;449:20;;;;;;;;;;;;;;;:26;;;429:47;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;429:47:2;403:74;;487:6;:18;494:10;487:18;;;;;;;;;;;;;;;511:7;487:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;487:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;536:7;529:14;;;280:270;:::o;797:449:1:-;874:1;846:8;:20;855:10;846:20;;;;;;;;;;;;;;;:26;;;:29;;839:37;;;;;;886:13;902:8;:20;911:10;902:20;;;;;;;;;;;;;;;:30;;;886:46;;971:33;1002:1;971:8;:20;980:10;971:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;942:8;:20;951:10;942:20;;;;;;;;;;;;;;;:26;;:62;;;;1043:33;1074:1;1043:8;:20;1052:10;1043:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;1014:8;:20;1023:10;1014:20;;;;;;;;;;;;;;;:26;;:62;;;;1119:69;1154:8;:20;1163:10;1154:20;;;;;;;;;;;;;;;:33;;;1119:8;:20;1128:10;1119:20;;;;;;;;;;;;;;;:30;;;:34;;:69;;;;:::i;:::-;1086:8;:20;1095:10;1086:20;;;;;;;;;;;;;;;:30;;:102;;;;1234:5;1198:8;:20;1207:10;1198:20;;;;;;;;;;;;;;;:33;;:41;;;;797:449;:::o;1073:543:3:-;1157:4;1218:5;1181:42;;:10;1192:14;1181:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:42;;;:82;;;;;1259:4;1227:36;;1232:5;1227:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1227:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1227:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1227:28:3;;;;;;;;;;;;;;;;:36;;;1181:82;1173:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1340:5;1301:44;;:10;1312:14;1301:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:44;;;1293:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1424:10;1387:47;;:10;1398:14;1387:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;1379:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1480:5;1475:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1475:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1475:31:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1475:31:3;;;;;;;;;;;;;;;;1474:32;1470:139;;;1529:10;1540:14;1529:26;;;;;;;;;;;;;;;;;;;;;1522:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1576:4;1569:11;;;;1470:139;1604:5;1597:12;;1073:543;;;;;:::o;768:166:2:-;826:15;842;858:14;873:13;909:4;904:21;;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;904:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;904:23:2;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;904:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;897:30;;;;;;;;768:166;;;;;:::o;359:38:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;436:323::-;482:4;530:1;500:8;:20;509:10;500:20;;;;;;;;;;;;;;;:26;;;:31;497:238;;;571:1;542:8;:20;551:10;542:20;;;;;;;;;;;;;;;:26;;:30;;;;611:1;582:8;:20;591:10;582:20;;;;;;;;;;;;;;;:26;;:30;;;;658:3;622:8;:20;631:10;622:20;;;;;;;;;;;;;;;:33;;:39;;;;704:3;671:8;:20;680:10;671:20;;;;;;;;;;;;;;;:30;;:36;;;;724:4;717:11;;;;497:238;747:5;740:12;;436:323;;:::o;575:493:3:-;641:4;697:5;665:37;;:6;:18;672:10;665:18;;;;;;;;;;;;;;;684:8;665:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;657:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:5;746:37;;751:5;746:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;746:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;746:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;746:28:3;;;;;;;;;;;;;;;;:37;;;738:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;813:25;;:::i;:::-;865:5;848;:14;;:22;;;;;;;;;;;895:10;880:5;:12;;:25;;;;;;;;;;;941:8;915:5;:23;;:34;;;;;976:5;959;:14;;:22;;;;;;;;;;;991:10;1007:5;991:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;991:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1035:5;1030:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1030:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1030:31:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1030:31:3;;;;;;;;;;;;;;;;1023:38;;;575:493;;;;:::o;400:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;438:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;834:176:5:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;92:932:2:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\nimport './Fish.sol';\nimport './FishRod.sol';\nimport './Market.sol';\ncontract FrenzyFish is FishRod,Market{\n  // Constructor\n    constructor () public {\n    }\n\n // Function to Fishing a new Fish into Structure \"FishModel\" with reference to msg.sender .\n    function Fishing() public returns(address){\n        require(UsersRod[msg.sender].Level != 0,\"Rod Must be Needed\");\n        address newfish = address(new Fish(msg.sender,UsersRod[msg.sender].Level));\n        Fishes[msg.sender].push(newfish);\n        return newfish;\n    }\n    //function to list all the fish of an account\n     function ListAllFishes() public view returns(address[] memory) {\n         return Fishes[msg.sender];\n     }\n      //function to get the details of a fish\n        function GetFishDetails(address fish) public view returns(uint256 _rarity,uint256 _weight,uint256 _price,bool _onOrder){\n        return Fish(fish).GetDetails();\n    }\n\n\n    // function RechargeUsingFish(address _Fish,uint256 _position) public{\n\n    // }\n\n}",
  "sourcePath": "/home/denny/Code/FishingFrenzy/contracts/FrenzyFish.sol",
  "ast": {
    "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        489
      ]
    },
    "id": 490,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 403,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 404,
        "nodeType": "ImportDirective",
        "scope": 490,
        "sourceUnit": 225,
        "src": "24:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 405,
        "nodeType": "ImportDirective",
        "scope": 490,
        "sourceUnit": 402,
        "src": "45:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/Market.sol",
        "file": "./Market.sol",
        "id": 406,
        "nodeType": "ImportDirective",
        "scope": 490,
        "sourceUnit": 864,
        "src": "69:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 407,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 401,
              "src": "115:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$401",
                "typeString": "contract FishRod"
              }
            },
            "id": 408,
            "nodeType": "InheritanceSpecifier",
            "src": "115:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 409,
              "name": "Market",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 863,
              "src": "123:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Market_$863",
                "typeString": "contract Market"
              }
            },
            "id": 410,
            "nodeType": "InheritanceSpecifier",
            "src": "123:6:2"
          }
        ],
        "contractDependencies": [
          224,
          401,
          863
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 489,
        "linearizedBaseContracts": [
          489,
          863,
          401
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "174:7:2",
              "statements": []
            },
            "documentation": null,
            "id": 414,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:2"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:2"
            },
            "scope": 489,
            "src": "152:29:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "322:228:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "UsersRod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "340:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$239_storage_$",
                                "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                              }
                            },
                            "id": 423,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 421,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1068,
                                "src": "349:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "349:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "340:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rod_$239_storage",
                              "typeString": "struct FishRod.Rod storage ref"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Level",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 232,
                          "src": "340:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "370:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "340:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526f64204d757374206265204e6565646564",
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "372:20:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        },
                        "value": "Rod Must be Needed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        }
                      ],
                      "id": 419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1071,
                        1072
                      ],
                      "referencedDeclaration": 1072,
                      "src": "332:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "332:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "332:61:2"
                },
                {
                  "assignments": [
                    431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 431,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "403:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "403:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 435,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "438:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "438:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 437,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 243,
                                "src": "449:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$239_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 440,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 438,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1068,
                                  "src": "458:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "458:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "449:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$239_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 232,
                            "src": "449:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "429:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$224_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 433,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 224,
                            "src": "433:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$224",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "429:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$224",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$224",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "421:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "403:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "511:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "487:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 446,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "494:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "494:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "487:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "487:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "487:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "newfish",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 431,
                    "src": "536:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 418,
                  "id": 454,
                  "nodeType": "Return",
                  "src": "529:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:2:2"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "314:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "313:9:2"
            },
            "scope": 489,
            "src": "280:270:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "669:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 462,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "687:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 465,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "694:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "694:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "687:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 466,
                  "nodeType": "Return",
                  "src": "680:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:2:2"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "651:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 458,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "651:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 459,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "651:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:18:2"
            },
            "scope": 489,
            "src": "606:107:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "887:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 482,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "909:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 481,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 224,
                          "src": "904:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$224_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "904:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$224",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "904:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "904:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 480,
                  "id": 486,
                  "nodeType": "Return",
                  "src": "897:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "792:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "791:14:2"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "826:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "842:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 477,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "858:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "name": "_onOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "873:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "825:62:2"
            },
            "scope": 489,
            "src": "768:166:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 490,
        "src": "92:932:2"
      }
    ],
    "src": "0:1024:2"
  },
  "legacyAST": {
    "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        489
      ]
    },
    "id": 490,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 403,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 404,
        "nodeType": "ImportDirective",
        "scope": 490,
        "sourceUnit": 225,
        "src": "24:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 405,
        "nodeType": "ImportDirective",
        "scope": 490,
        "sourceUnit": 402,
        "src": "45:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/denny/Code/FishingFrenzy/contracts/Market.sol",
        "file": "./Market.sol",
        "id": 406,
        "nodeType": "ImportDirective",
        "scope": 490,
        "sourceUnit": 864,
        "src": "69:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 407,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 401,
              "src": "115:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$401",
                "typeString": "contract FishRod"
              }
            },
            "id": 408,
            "nodeType": "InheritanceSpecifier",
            "src": "115:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 409,
              "name": "Market",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 863,
              "src": "123:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Market_$863",
                "typeString": "contract Market"
              }
            },
            "id": 410,
            "nodeType": "InheritanceSpecifier",
            "src": "123:6:2"
          }
        ],
        "contractDependencies": [
          224,
          401,
          863
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 489,
        "linearizedBaseContracts": [
          489,
          863,
          401
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "174:7:2",
              "statements": []
            },
            "documentation": null,
            "id": 414,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "164:2:2"
            },
            "returnParameters": {
              "id": 412,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "174:0:2"
            },
            "scope": 489,
            "src": "152:29:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 455,
              "nodeType": "Block",
              "src": "322:228:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 420,
                              "name": "UsersRod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 243,
                              "src": "340:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$239_storage_$",
                                "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                              }
                            },
                            "id": 423,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 421,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1068,
                                "src": "349:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "349:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "340:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rod_$239_storage",
                              "typeString": "struct FishRod.Rod storage ref"
                            }
                          },
                          "id": 424,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Level",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 232,
                          "src": "340:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "370:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "340:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526f64204d757374206265204e6565646564",
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "372:20:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        },
                        "value": "Rod Must be Needed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        }
                      ],
                      "id": 419,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1071,
                        1072
                      ],
                      "referencedDeclaration": 1072,
                      "src": "332:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "332:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "ExpressionStatement",
                  "src": "332:61:2"
                },
                {
                  "assignments": [
                    431
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 431,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 455,
                      "src": "403:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 430,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "403:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 444,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 435,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1068,
                              "src": "438:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 436,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "438:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 437,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 243,
                                "src": "449:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$239_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 440,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 438,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1068,
                                  "src": "458:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "458:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "449:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$239_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 441,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 232,
                            "src": "449:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "429:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$224_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 433,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 224,
                            "src": "433:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$224",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "429:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$224",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$224",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "421:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "421:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "403:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 450,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 431,
                        "src": "511:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 445,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 514,
                          "src": "487:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 448,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 446,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1068,
                            "src": "494:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 447,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "494:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "487:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "487:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "487:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 452,
                  "nodeType": "ExpressionStatement",
                  "src": "487:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 453,
                    "name": "newfish",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 431,
                    "src": "536:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 418,
                  "id": 454,
                  "nodeType": "Return",
                  "src": "529:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 456,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 415,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "296:2:2"
            },
            "returnParameters": {
              "id": 418,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 456,
                  "src": "314:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "314:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "313:9:2"
            },
            "scope": 489,
            "src": "280:270:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 467,
              "nodeType": "Block",
              "src": "669:44:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 462,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 514,
                      "src": "687:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 465,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 463,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1068,
                        "src": "694:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "694:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "687:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 461,
                  "id": 466,
                  "nodeType": "Return",
                  "src": "680:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 468,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 457,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:2:2"
            },
            "returnParameters": {
              "id": 461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 460,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 468,
                  "src": "651:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 458,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "651:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 459,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "651:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "650:18:2"
            },
            "scope": 489,
            "src": "606:107:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 487,
              "nodeType": "Block",
              "src": "887:47:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 482,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 470,
                            "src": "909:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 481,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 224,
                          "src": "904:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$224_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "904:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$224",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 484,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 149,
                      "src": "904:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "904:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 480,
                  "id": 486,
                  "nodeType": "Return",
                  "src": "897:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 488,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 470,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "792:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "791:14:2"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 473,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "826:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "826:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 475,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "842:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 474,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "842:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 477,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "858:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "858:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "name": "_onOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 488,
                  "src": "873:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "873:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "825:62:2"
            },
            "scope": 489,
            "src": "768:166:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 490,
        "src": "92:932:2"
      }
    ],
    "src": "0:1024:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4002": {
      "events": {},
      "links": {},
      "address": "0x5043591559d7a26A56480e61e50b3d1926edc77F",
      "transactionHash": "0x288ea35fbee5b57052162504bdd98a87432ad27d2d567da3bc41d23b9cb7e2c3"
    },
    "8995": {
      "events": {},
      "links": {},
      "address": "0x9a370FaB877dA7614dE9c3612abf47F0A05a4a58",
      "transactionHash": "0x566b66b86aa9cd5333b12adcabbf958c9c089114e9dff4d35068751f2103de0c"
    }
  },
  "schemaVersion": "3.0.16",
  "updatedAt": "2019-10-06T10:55:56.326Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}