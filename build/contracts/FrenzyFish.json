{
  "contractName": "FrenzyFish",
  "abi": [
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "_orderPosition",
          "type": "uint256"
        }
      ],
      "name": "BuyFish",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GetRodDetails",
      "outputs": [
        {
          "name": "_level",
          "type": "uint256"
        },
        {
          "name": "_power",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ListMarketOrders",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "address[]"
        },
        {
          "name": "",
          "type": "uint256[]"
        },
        {
          "name": "",
          "type": "bool[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "UpgradeFishRod",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "_orderPosition",
          "type": "uint256"
        }
      ],
      "name": "CancelSellFishOrder",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "name": "UsersRod",
      "outputs": [
        {
          "name": "Level",
          "type": "uint256"
        },
        {
          "name": "Power",
          "type": "uint256"
        },
        {
          "name": "CurrentPrice",
          "type": "uint256"
        },
        {
          "name": "NextPrice",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "FirstUserInitialRod",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_fish",
          "type": "address"
        },
        {
          "name": "position",
          "type": "uint256"
        }
      ],
      "name": "SellFish",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "SellOrders",
      "outputs": [
        {
          "name": "SellFish",
          "type": "address"
        },
        {
          "name": "Seller",
          "type": "address"
        },
        {
          "name": "OwnerFishPosition",
          "type": "uint256"
        },
        {
          "name": "IsFilled",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Fishes",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "Fishing",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ListAllFishes",
      "outputs": [
        {
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "fish",
          "type": "address"
        }
      ],
      "name": "GetFishDetails",
      "outputs": [
        {
          "name": "_rarity",
          "type": "uint256"
        },
        {
          "name": "_weight",
          "type": "uint256"
        },
        {
          "name": "_price",
          "type": "uint256"
        },
        {
          "name": "_onOrder",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"BuyFish\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"GetRodDetails\",\"outputs\":[{\"name\":\"_level\",\"type\":\"uint256\"},{\"name\":\"_power\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ListMarketOrders\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"address[]\"},{\"name\":\"\",\"type\":\"uint256[]\"},{\"name\":\"\",\"type\":\"bool[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ListAllFishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Fishing\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"UpgradeFishRod\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"_orderPosition\",\"type\":\"uint256\"}],\"name\":\"CancelSellFishOrder\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"fish\",\"type\":\"address\"}],\"name\":\"GetFishDetails\",\"outputs\":[{\"name\":\"_rarity\",\"type\":\"uint256\"},{\"name\":\"_weight\",\"type\":\"uint256\"},{\"name\":\"_price\",\"type\":\"uint256\"},{\"name\":\"_onOrder\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"UsersRod\",\"outputs\":[{\"name\":\"Level\",\"type\":\"uint256\"},{\"name\":\"Power\",\"type\":\"uint256\"},{\"name\":\"CurrentPrice\",\"type\":\"uint256\"},{\"name\":\"NextPrice\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"FirstUserInitialRod\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_fish\",\"type\":\"address\"},{\"name\":\"position\",\"type\":\"uint256\"}],\"name\":\"SellFish\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"SellOrders\",\"outputs\":[{\"name\":\"SellFish\",\"type\":\"address\"},{\"name\":\"Seller\",\"type\":\"address\"},{\"name\":\"OwnerFishPosition\",\"type\":\"uint256\"},{\"name\":\"IsFilled\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Fishes\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/E/Hackathon/FishingFrenzy/contracts/FrenzyFish.sol\":\"FrenzyFish\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/E/Hackathon/FishingFrenzy/contracts/Fish.sol\":{\"keccak256\":\"0x38e04f46a2d7991911e9a836d36289100c1f0a34e9c11608f064d2bcb061c8b0\",\"urls\":[\"bzzr://e196186c564b3bc1d5dba04a3d88138e52582a76b502b1b1b5ce9bf0bd277210\"]},\"/E/Hackathon/FishingFrenzy/contracts/FishRod.sol\":{\"keccak256\":\"0xb612995b309082e9f0658575a36c5ed9a129c2cfb553dbd6669e3697f7b29eff\",\"urls\":[\"bzzr://fe349cced6369eb85f63935c748da3ff68e4c5914481966fb59c20085b913a2c\"]},\"/E/Hackathon/FishingFrenzy/contracts/FrenzyFish.sol\":{\"keccak256\":\"0x3ebe0195178b855ea9ae9d07fae99dc2ae280f3029383a8e87e094beb4f8256a\",\"urls\":[\"bzzr://d033c96a907887d55443c68f12514a5a4bc26655a574200aae53939bb01bced0\"]},\"/E/Hackathon/FishingFrenzy/contracts/Market.sol\":{\"keccak256\":\"0x0d33c937b9821dcdc23642282c98211f7bd9a9b44724d31bf8930404e229056e\",\"urls\":[\"bzzr://7c7f658bcaa285097e020d6f53edfdbfbd958f3568744cae48e79bdd76560a6d\"]},\"/E/Hackathon/FishingFrenzy/contracts/SafeMath.sol\":{\"keccak256\":\"0x9194acaa467da3228cea42c3168b23fae17941800328032108e3153d1a0fbb5f\",\"urls\":[\"bzzr://f9ed5b3ee80bc2b256d4855cc637a522e6dc61b2eb672f2a710e8aba026f1ed6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50612f09806100206000396000f3fe608060405260043610620000d3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ac1449014620000d85780630b5d5b54146200014f578063267dbaa3146200018b57806328347b6c14620002da5780636765bc16146200034b57806392a8a78914620003a55780639aa0d92514620003bf5780639e96c3ad1462000436578063a089dcde14620004b8578063a5e12aef1462000536578063a6149f091462000568578063cb5eeae714620005df578063ce4f8d4114620006a3575b600080fd5b348015620000e557600080fd5b506200013560048036036040811015620000fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000742565b604051808215151515815260200191505060405180910390f35b3480156200015c57600080fd5b506200016762000d68565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156200019857600080fd5b50620001a362000e3e565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b83811015620001f4578082015181840152602081019050620001d7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015620002385780820151818401526020810190506200021b565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156200027c5780820151818401526020810190506200025f565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015620002c0578082015181840152602081019050620002a3565b505050509050019850505050505050505060405180910390f35b348015620002e757600080fd5b50620002f262001107565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620003375780820151818401526020810190506200031a565b505050509050019250505060405180910390f35b3480156200035857600080fd5b5062000363620011d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620003b257600080fd5b50620003bd620013e6565b005b348015620003cc57600080fd5b506200041c60048036036040811015620003e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620016d8565b604051808215151515815260200191505060405180910390f35b3480156200044357600080fd5b5062000489600480360360208110156200045c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001b48565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b348015620004c557600080fd5b506200050b60048036036020811015620004de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001c1b565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156200054357600080fd5b506200054e62001c4b565b604051808215151515815260200191505060405180910390f35b3480156200057557600080fd5b50620005c5600480360360408110156200058e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001dc6565b604051808215151515815260200191505060405180910390f35b348015620005ec57600080fd5b506200061c600480360360208110156200060557600080fd5b810190808035906020019092919050505062002228565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390f35b348015620006b057600080fd5b506200070060048036036040811015620006c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620022b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200076b57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620008645750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156200082357600080fd5b505afa15801562000838573d6000803e3d6000fd5b505050506040513d60208110156200084f57600080fd5b81019080805190602001909291905050501515145b1515620008d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200090057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515620009bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f776e65722043616e277420427579000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600183815481101515620009d357fe5b906000526020600020906004020160030160009054906101000a900460ff16151514151562000a6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f853f657336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000b0657600080fd5b505af115801562000b1b573d6000803e3d6000fd5b505050506040513d602081101562000b3257600080fd5b81019080805190602001909291905050501562000d5d57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506002600060018481548110151562000c0057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018381548110151562000c7c57fe5b90600052602060002090600402016002015481548110151562000c9b57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018281548110151562000cd857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062000d62565b600090505b92915050565b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060806060806000600180549050905060608160405190808252806020026020018201604052801562000e805781602001602082028038833980820191505090505b50905060608260405190808252806020026020018201604052801562000eb55781602001602082028038833980820191505090505b50905060608360405190808252806020026020018201604052801562000eea5781602001602082028038833980820191505090505b50905060608460405190808252806020026020018201604052801562000f1f5781602001602082028038833980820191505090505b50905060008090505b600180549050811015620010ef5760018181548110151562000f4657fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858281518110151562000f8757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018181548110151562000fd357fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684828151811015156200101457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001818154811015156200106057fe5b90600052602060002090600402016002015483828151811015156200108157fe5b90602001906020020181815250506001818154811015156200109f57fe5b906000526020600020906004020160030160009054906101000a900460ff168282815181101515620010cd57fe5b9060200190602002019015159081151581525050808060010191505062000f28565b50838383839850985098509850505050505090919293565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620011ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200117f575b5050505050905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415151562001290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f526f64204d757374206265204e6565646564000000000000000000000000000081525060200191505060405180910390fd5b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154620012df6200238e565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f08015801562001339573d6000803e3d6000fd5b509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508091505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515156200143557fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050620014d260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506200156e60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200164a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200170157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620017fa5750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620017b957600080fd5b505afa158015620017ce573d6000803e3d6000fd5b505050506040513d6020811015620017e557600080fd5b81019080805190602001909291905050501515145b15156200186f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200188357fe5b906000526020600020906004020160030160009054906101000a900460ff1615151415156200191a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200194157fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620019ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001a6457600080fd5b505af115801562001a79573d6000803e3d6000fd5b505050506040513d602081101562001a9057600080fd5b8101908080519060200190929190505050151562001b3d5760018281548110151562001ab857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062001b42565b600090505b92915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160806040518083038186803b15801562001bb157600080fd5b505afa15801562001bc6573d6000803e3d6000fd5b505050506040513d608081101562001bdd57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505093509350935093509193509193565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141562001dbe5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001905062001dc3565b600090505b90565b60008273ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151562001e2c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562001ee3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b600015158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562001f4a57600080fd5b505afa15801562001f5f573d6000803e3d6000fd5b505050506040513d602081101562001f7657600080fd5b8101908080519060200190929190505050151514151562001fff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c726561647920696e204f726465720000000000000000000000000000000081525060200191505060405180910390fd5b620020096200239f565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505060008160600190151590811515815250506001819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050508373ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620021e257600080fd5b505af1158015620021f7573d6000803e3d6000fd5b505050506040513d60208110156200220e57600080fd5b810190808051906020019092919050505091505092915050565b6001818154811015156200223857fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600260205281600052604060002081815481101515620022d157fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080828401905083811015151562002384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b604051610ae780620023f783390190565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe608060405234801561001057600080fd5b50604051604080610ae78339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a661011e640100000000026401000000009004565b60008001819055506100c681610193640100000000026401000000009004565b6000600101819055506100f160006001015460008001546101e1640100000000026401000000009004565b60006003018190555060008060040160006101000a81548160ff02191690831515021790555050506103f0565b6000806101466064424445010161020b640100000000026104d7179091906401000000009004565b14156101555760039050610190565b600061017c600a424445010161020b640100000000026104d7179091906401000000009004565b141561018b5760029050610190565b600190505b90565b60006101da6101be600160038502034261020b640100000000026104d7179091906401000000009004565b8361029964010000000002610565179091906401000000009004565b9050919050565b60006102038284610323640100000000026105ef179091906401000000009004565b905092915050565b6000808214151515610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561029057fe5b06905092915050565b6000808284019050838110151515610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561033657600090506103ea565b6000828402905082848281151561034957fe5b041415156103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b6106e8806103ff6000396000f3fe60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313c23f411461009357806344c57bc6146100c25780636ff8ec3614610139578063b4f6f50914610188578063be889f4b146101b3578063cc2e8cca146101e2578063d1353c6814610226578063f853f6571461027f575b600080fd5b34801561009f57600080fd5b506100a86102e8565b604051808215151515815260200191505060405180910390f35b3480156100ce57600080fd5b506100d7610301565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b34801561014557600080fd5b506101726004803603602081101561015c57600080fd5b8101908080359060200190929190505050610352565b6040518082815260200191505060405180910390f35b34801561019457600080fd5b5061019d610386565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101c86103e1565b604051808215151515815260200191505060405180910390f35b3480156101ee57600080fd5b506101f761042a565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b34801561023257600080fd5b506102696004803603604081101561024957600080fd5b810190808035906020019092919080359060200190929190505050610462565b6040518082815260200191505060405180910390f35b34801561028b57600080fd5b506102ce600480360360208110156102a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061047f565b604051808215151515815260200191505060405180910390f35b60008060040160009054906101000a900460ff16905090565b60008060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b600061037f61037060016003850203426104d790919063ffffffff16565b8361056590919063ffffffff16565b9050919050565b6000806103a1606442444501016104d790919063ffffffff16565b14156103b057600390506103de565b60006103ca600a42444501016104d790919063ffffffff16565b14156103d957600290506103de565b600190505b90565b60008060040160009054906101000a900460ff1615600060040160006101000a81548160ff021916908315150217905550600060040160009054906101000a900460ff16905090565b6000806000806000800154600060010154600060030154600060040160009054906101000a900460ff16935093509350935090919293565b600061047782846105ef90919063ffffffff16565b905092915050565b600081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104cd6103e1565b5060019050919050565b6000808214151515610551576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561055c57fe5b06905092915050565b60008082840190508381101515156105e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561060257600090506106b6565b6000828402905082848281151561061557fe5b041415156106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820b7829ab55bed4c4b382af0ca020d95ee5fb758c2c62bafab9dfd747754c970900029a165627a7a72305820b25160213ae794429af458839904f62b5ab02bac5ce65b04ef734a3d106a84460029",
  "deployedBytecode": "0x608060405260043610620000d3576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ac1449014620000d85780630b5d5b54146200014f578063267dbaa3146200018b57806328347b6c14620002da5780636765bc16146200034b57806392a8a78914620003a55780639aa0d92514620003bf5780639e96c3ad1462000436578063a089dcde14620004b8578063a5e12aef1462000536578063a6149f091462000568578063cb5eeae714620005df578063ce4f8d4114620006a3575b600080fd5b348015620000e557600080fd5b506200013560048036036040811015620000fe57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062000742565b604051808215151515815260200191505060405180910390f35b3480156200015c57600080fd5b506200016762000d68565b60405180848152602001838152602001828152602001935050505060405180910390f35b3480156200019857600080fd5b50620001a362000e3e565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019060200280838360005b83811015620001f4578082015181840152602081019050620001d7565b50505050905001858103845288818151815260200191508051906020019060200280838360005b83811015620002385780820151818401526020810190506200021b565b50505050905001858103835287818151815260200191508051906020019060200280838360005b838110156200027c5780820151818401526020810190506200025f565b50505050905001858103825286818151815260200191508051906020019060200280838360005b83811015620002c0578082015181840152602081019050620002a3565b505050509050019850505050505050505060405180910390f35b348015620002e757600080fd5b50620002f262001107565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015620003375780820151818401526020810190506200031a565b505050509050019250505060405180910390f35b3480156200035857600080fd5b5062000363620011d4565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015620003b257600080fd5b50620003bd620013e6565b005b348015620003cc57600080fd5b506200041c60048036036040811015620003e557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620016d8565b604051808215151515815260200191505060405180910390f35b3480156200044357600080fd5b5062000489600480360360208110156200045c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001b48565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b348015620004c557600080fd5b506200050b60048036036020811015620004de57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505062001c1b565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b3480156200054357600080fd5b506200054e62001c4b565b604051808215151515815260200191505060405180910390f35b3480156200057557600080fd5b50620005c5600480360360408110156200058e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505062001dc6565b604051808215151515815260200191505060405180910390f35b348015620005ec57600080fd5b506200061c600480360360208110156200060557600080fd5b810190808035906020019092919050505062002228565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018215151515815260200194505050505060405180910390f35b348015620006b057600080fd5b506200070060048036036040811015620006c957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050620022b5565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200076b57fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620008645750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b1580156200082357600080fd5b505afa15801562000838573d6000803e3d6000fd5b505050506040513d60208110156200084f57600080fd5b81019080805190602001909291905050501515145b1515620008d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200090057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151515620009bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f4f776e65722043616e277420427579000000000000000000000000000000000081525060200191505060405180910390fd5b60001515600183815481101515620009d357fe5b906000526020600020906004020160030160009054906101000a900460ff16151514151562000a6a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663f853f657336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050602060405180830381600087803b15801562000b0657600080fd5b505af115801562000b1b573d6000803e3d6000fd5b505050506040513d602081101562000b3257600080fd5b81019080805190602001909291905050501562000d5d57600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208390806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506002600060018481548110151562000c0057fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060018381548110151562000c7c57fe5b90600052602060002090600402016002015481548110151562000c9b57fe5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560018281548110151562000cd857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062000d62565b600090505b92915050565b60008060008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030154925092509250909192565b6060806060806000600180549050905060608160405190808252806020026020018201604052801562000e805781602001602082028038833980820191505090505b50905060608260405190808252806020026020018201604052801562000eb55781602001602082028038833980820191505090505b50905060608360405190808252806020026020018201604052801562000eea5781602001602082028038833980820191505090505b50905060608460405190808252806020026020018201604052801562000f1f5781602001602082028038833980820191505090505b50905060008090505b600180549050811015620010ef5760018181548110151562000f4657fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16858281518110151562000f8757fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060018181548110151562000fd357fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1684828151811015156200101457fe5b9060200190602002019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506001818154811015156200106057fe5b90600052602060002090600402016002015483828151811015156200108157fe5b90602001906020020181815250506001818154811015156200109f57fe5b906000526020600020906004020160030160009054906101000a900460ff168282815181101515620010cd57fe5b9060200190602002019015159081151581525050808060010191505062000f28565b50838383839850985098509850505050505090919293565b6060600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015620011ca57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116200117f575b5050505050905090565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001541415151562001290576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f526f64204d757374206265204e6565646564000000000000000000000000000081525060200191505060405180910390fd5b6000336000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154620012df6200238e565b808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051809103906000f08015801562001339573d6000803e3d6000fd5b509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550508091505090565b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141515156200143557fe5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301549050620014d260016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001819055506200156e60026000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600101819055506200164a6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201546000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546200230390919063ffffffff16565b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555050565b60008273ffffffffffffffffffffffffffffffffffffffff166001838154811015156200170157fe5b906000526020600020906004020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16148015620017fa5750600115158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b158015620017b957600080fd5b505afa158015620017ce573d6000803e3d6000fd5b505050506040513d6020811015620017e557600080fd5b81019080805190602001909291905050501515145b15156200186f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4e6f7420696e204f726465724c6973740000000000000000000000000000000081525060200191505060405180910390fd5b600015156001838154811015156200188357fe5b906000526020600020906004020160030160009054906101000a900460ff1615151415156200191a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f4f7264657220416c72656164792046696c6c656400000000000000000000000081525060200191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166001838154811015156200194157fe5b906000526020600020906004020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515620019ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b15801562001a6457600080fd5b505af115801562001a79573d6000803e3d6000fd5b505050506040513d602081101562001a9057600080fd5b8101908080519060200190929190505050151562001b3d5760018281548110151562001ab857fe5b9060005260206000209060040201600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560028201600090556003820160006101000a81549060ff021916905550506001905062001b42565b600090505b92915050565b6000806000808473ffffffffffffffffffffffffffffffffffffffff1663cc2e8cca6040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160806040518083038186803b15801562001bb157600080fd5b505afa15801562001bc6573d6000803e3d6000fd5b505050506040513d608081101562001bdd57600080fd5b810190808051906020019092919080519060200190929190805190602001909291908051906020019092919050505093509350935093509193509193565b60006020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154141562001dbe5760016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555060036000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555060ff6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506101816000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055506001905062001dc3565b600090505b90565b60008273ffffffffffffffffffffffffffffffffffffffff16600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208381548110151562001e2c57fe5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151562001ee3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f55736572206973206e6f742046697368206f776e65720000000000000000000081525060200191505060405180910390fd5b600015158373ffffffffffffffffffffffffffffffffffffffff166313c23f416040518163ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040160206040518083038186803b15801562001f4a57600080fd5b505afa15801562001f5f573d6000803e3d6000fd5b505050506040513d602081101562001f7657600080fd5b8101908080519060200190929190505050151514151562001fff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f416c726561647920696e204f726465720000000000000000000000000000000081525060200191505060405180910390fd5b620020096200239f565b83816000019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505033816020019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250508281604001818152505060008160600190151590811515815250506001819080600181540180825580915050906001820390600052602060002090600402016000909192909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015560608201518160030160006101000a81548160ff0219169083151502179055505050508373ffffffffffffffffffffffffffffffffffffffff1663be889f4b6040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401602060405180830381600087803b158015620021e257600080fd5b505af1158015620021f7573d6000803e3d6000fd5b505050506040513d60208110156200220e57600080fd5b810190808051906020019092919050505091505092915050565b6001818154811015156200223857fe5b90600052602060002090600402016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030160009054906101000a900460ff16905084565b600260205281600052604060002081815481101515620022d157fe5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080828401905083811015151562002384576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b604051610ae780620023f783390190565b608060405190810160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600015158152509056fe608060405234801561001057600080fd5b50604051604080610ae78339810180604052604081101561003057600080fd5b81019080805190602001909291908051906020019092919050505081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506100a661011e640100000000026401000000009004565b60008001819055506100c681610193640100000000026401000000009004565b6000600101819055506100f160006001015460008001546101e1640100000000026401000000009004565b60006003018190555060008060040160006101000a81548160ff02191690831515021790555050506103f0565b6000806101466064424445010161020b640100000000026104d7179091906401000000009004565b14156101555760039050610190565b600061017c600a424445010161020b640100000000026104d7179091906401000000009004565b141561018b5760029050610190565b600190505b90565b60006101da6101be600160038502034261020b640100000000026104d7179091906401000000009004565b8361029964010000000002610565179091906401000000009004565b9050919050565b60006102038284610323640100000000026105ef179091906401000000009004565b905092915050565b6000808214151515610285576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561029057fe5b06905092915050565b6000808284019050838110151515610319576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561033657600090506103ea565b6000828402905082848281151561034957fe5b041415156103e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b92915050565b6106e8806103ff6000396000f3fe60806040526004361061008e576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806313c23f411461009357806344c57bc6146100c25780636ff8ec3614610139578063b4f6f50914610188578063be889f4b146101b3578063cc2e8cca146101e2578063d1353c6814610226578063f853f6571461027f575b600080fd5b34801561009f57600080fd5b506100a86102e8565b604051808215151515815260200191505060405180910390f35b3480156100ce57600080fd5b506100d7610301565b604051808681526020018581526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001821515151581526020019550505050505060405180910390f35b34801561014557600080fd5b506101726004803603602081101561015c57600080fd5b8101908080359060200190929190505050610352565b6040518082815260200191505060405180910390f35b34801561019457600080fd5b5061019d610386565b6040518082815260200191505060405180910390f35b3480156101bf57600080fd5b506101c86103e1565b604051808215151515815260200191505060405180910390f35b3480156101ee57600080fd5b506101f761042a565b604051808581526020018481526020018381526020018215151515815260200194505050505060405180910390f35b34801561023257600080fd5b506102696004803603604081101561024957600080fd5b810190808035906020019092919080359060200190929190505050610462565b6040518082815260200191505060405180910390f35b34801561028b57600080fd5b506102ce600480360360208110156102a257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061047f565b604051808215151515815260200191505060405180910390f35b60008060040160009054906101000a900460ff16905090565b60008060000154908060010154908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030154908060040160009054906101000a900460ff16905085565b600061037f61037060016003850203426104d790919063ffffffff16565b8361056590919063ffffffff16565b9050919050565b6000806103a1606442444501016104d790919063ffffffff16565b14156103b057600390506103de565b60006103ca600a42444501016104d790919063ffffffff16565b14156103d957600290506103de565b600190505b90565b60008060040160009054906101000a900460ff1615600060040160006101000a81548160ff021916908315150217905550600060040160009054906101000a900460ff16905090565b6000806000806000800154600060010154600060030154600060040160009054906101000a900460ff16935093509350935090919293565b600061047782846105ef90919063ffffffff16565b905092915050565b600081600060020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104cd6103e1565b5060019050919050565b6000808214151515610551576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536166654d6174683a206d6f64756c6f206279207a65726f000000000000000081525060200191505060405180910390fd5b818381151561055c57fe5b06905092915050565b60008082840190508381101515156105e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008083141561060257600090506106b6565b6000828402905082848281151561061557fe5b041415156106b1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001807f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f81526020017f770000000000000000000000000000000000000000000000000000000000000081525060400191505060405180910390fd5b809150505b9291505056fea165627a7a72305820b7829ab55bed4c4b382af0ca020d95ee5fb758c2c62bafab9dfd747754c970900029a165627a7a72305820b25160213ae794429af458839904f62b5ab02bac5ce65b04ef734a3d106a84460029",
  "sourceMap": "96:958:2:-;;;158:30;8:9:-1;5:2;;;30:1;27;20:12;5:2;158:30:2;96:958;;;;;;",
  "deployedSourceMap": "96:958:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:719:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1663:719:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1663:719:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1288:201:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1288:201:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2388:752:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2388:752:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2388:752:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2388:752:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2388:752:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2388:752:3;;;;;;;;;;;;;;;;;;;;;;;623:109:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;623:109:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;623:109:2;;;;;;;;;;;;;;;;;290:275;;8:9:-1;5:2;;;30:1;27;20:12;5:2;290:275:2;;;;;;;;;;;;;;;;;;;;;;;;;;;826:456:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;826:456:1;;;;;;1106:551:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1106:551:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1106:551:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;789:168:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;789:168:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;789:168:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;374:38:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;374:38:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;374:38:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:332;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:332:1;;;;;;;;;;;;;;;;;;;;;;;;;;;597:503:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;597:503:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;597:503:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:32;;8:9:-1;5:2;;;30:1;27;20:12;5:2;415:32:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;415:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;454:42;;8:9:-1;5:2;;;30:1;27;20:12;5:2;454:42:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;454:42:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1663:719;1735:4;1797:5;1760:42;;:10;1771:14;1760:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:42;;;:82;;;;;1838:4;1806:36;;1811:5;1806:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1806:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1806:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1806:28:3;;;;;;;;;;;;;;;;:36;;;1760:82;1752:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:10;1881:47;;:10;1892:14;1881:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;;1873:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2005:5;1966:44;;:10;1977:14;1966:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:44;;;1958:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2054:5;2049:27;;;2077:10;2049:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2049:39:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2049:39:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2049:39:3;;;;;;;;;;;;;;;;2045:330;;;2105:6;:18;2112:10;2105:18;;;;;;;;;;;;;;;2129:5;2105:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;2105:30:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:6;:41;2164:10;2175:14;2164:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;2157:41;;;;;;;;;;;;;;;2199:10;2210:14;2199:26;;;;;;;;;;;;;;;;;;;;:44;;;2157:87;;;;;;;;;;;;;;;;;;2150:94;;;;;;;;;;;2266:10;2277:14;2266:26;;;;;;;;;;;;;;;;;;;;;2259:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2314:4;2307:11;;;;2045:330;2358:5;2351:12;;1663:719;;;;;:::o;1288:201:1:-;1333:14;1348;1363;1396:8;:20;1405:10;1396:20;;;;;;;;;;;;;;;:26;;;1423:8;:20;1432:10;1423:20;;;;;;;;;;;;;;;:26;;;1450:8;:20;1459:10;1450:20;;;;;;;;;;;;;;;:30;;;1389:92;;;;;;1288:201;;;:::o;2388:752:3:-;2436:16;2454;2471;2488:13;2514:14;2531:10;:17;;;;2514:34;;2559:26;2602:6;2588:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2588:21:3;;;;2559:50;;2620:24;2661:6;2647:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2647:21:3;;;;2620:48;;2679:35;2731:6;2717:21;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2717:21:3;;;;2679:59;;2749:23;2786:6;2775:18;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;2775:18:3;;;;2749:44;;2808:9;2820:1;2808:13;;2804:263;2826:10;:17;;;;2822:1;:21;2804:263;;;2875:10;2886:1;2875:13;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;2860:9;2870:1;2860:12;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;2921:10;2932:1;2921:13;;;;;;;;;;;;;;;;;;;;:20;;;;;;;;;;;;2908:7;2916:1;2908:10;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;2976:10;2987:1;2976:13;;;;;;;;;;;;;;;;;;;;:31;;;2952:18;2971:1;2952:21;;;;;;;;;;;;;;;;;:55;;;;;3033:10;3044:1;3033:13;;;;;;;;;;;;;;;;;;;;:22;;;;;;;;;;;;3018:9;3028:1;3018:12;;;;;;;;;;;;;;;;;:37;;;;;;;;;;;2845:3;;;;;;;2804:263;;;;3085:9;3095:7;3103:18;3122:9;3077:55;;;;;;;;;;;;;2388:752;;;;:::o;623:109:2:-;668:16;705:6;:18;712:10;705:18;;;;;;;;;;;;;;;698:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;623:109;:::o;290:275::-;324:7;381:1;351:8;:20;360:10;351:20;;;;;;;;;;;;;;;:26;;;:31;;343:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;415:15;450:10;461:8;:20;470:10;461:20;;;;;;;;;;;;;;;:26;;;441:47;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;441:47:2;415:74;;500:6;:18;507:10;500:18;;;;;;;;;;;;;;;524:7;500:32;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;500:32:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;550:7;543:14;;;290:275;:::o;826:456:1:-;904:1;876:8;:20;885:10;876:20;;;;;;;;;;;;;;;:26;;;:29;;869:37;;;;;;917:13;933:8;:20;942:10;933:20;;;;;;;;;;;;;;;:30;;;917:46;;1003:33;1034:1;1003:8;:20;1012:10;1003:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;974:8;:20;983:10;974:20;;;;;;;;;;;;;;;:26;;:62;;;;1076:33;1107:1;1076:8;:20;1085:10;1076:20;;;;;;;;;;;;;;;:26;;;:30;;:33;;;;:::i;:::-;1047:8;:20;1056:10;1047:20;;;;;;;;;;;;;;;:26;;:62;;;;1153:69;1188:8;:20;1197:10;1188:20;;;;;;;;;;;;;;;:33;;;1153:8;:20;1162:10;1153:20;;;;;;;;;;;;;;;:30;;;:34;;:69;;;;:::i;:::-;1120:8;:20;1129:10;1120:20;;;;;;;;;;;;;;;:30;;:102;;;;1269:5;1233:8;:20;1242:10;1233:20;;;;;;;;;;;;;;;:33;;:41;;;;826:456;:::o;1106:551:3:-;1190:4;1252:5;1215:42;;:10;1226:14;1215:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:42;;;:82;;;;;1293:4;1261:36;;1266:5;1261:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1261:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1261:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1261:28:3;;;;;;;;;;;;;;;;:36;;;1215:82;1207:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1375:5;1336:44;;:10;1347:14;1336:26;;;;;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;:44;;;1328:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1460:10;1423:47;;:10;1434:14;1423:26;;;;;;;;;;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;1415:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1517:5;1512:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1512:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1512:31:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1512:31:3;;;;;;;;;;;;;;;;1511:32;1507:142;;;1567:10;1578:14;1567:26;;;;;;;;;;;;;;;;;;;;;1560:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1615:4;1608:11;;;;1507:142;1644:5;1637:12;;1106:551;;;;;:::o;789:168:2:-;847:15;863;879:14;894:13;931:4;926:21;;;:23;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;926:23:2;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;926:23:2;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;926:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;919:30;;;;;;;;789:168;;;;;:::o;374:38:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;454:332::-;500:4;549:1;519:8;:20;528:10;519:20;;;;;;;;;;;;;;;:26;;;:31;516:244;;;591:1;562:8;:20;571:10;562:20;;;;;;;;;;;;;;;:26;;:30;;;;632:1;603:8;:20;612:10;603:20;;;;;;;;;;;;;;;:26;;:30;;;;680:3;644:8;:20;653:10;644:20;;;;;;;;;;;;;;;:33;;:39;;;;727:3;694:8;:20;703:10;694:20;;;;;;;;;;;;;;;:30;;:36;;;;748:4;741:11;;;;516:244;773:5;766:12;;454:332;;:::o;597:503:3:-;663:4;720:5;688:37;;:6;:18;695:10;688:18;;;;;;;;;;;;;;;707:8;688:28;;;;;;;;;;;;;;;;;;;;;;;;;;;:37;;;680:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;802:5;770:37;;775:5;770:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;770:28:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;770:28:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;770:28:3;;;;;;;;;;;;;;;;:37;;;762:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;838:25;;:::i;:::-;891:5;874;:14;;:22;;;;;;;;;;;922:10;907:5;:12;;:25;;;;;;;;;;;969:8;943:5;:23;;:34;;;;;1005:5;988;:14;;:22;;;;;;;;;;;1021:10;1037:5;1021:22;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1021:22:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1066:5;1061:29;;;:31;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1061:31:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1061:31:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1061:31:3;;;;;;;;;;;;;;;;1054:38;;;597:503;;;;:::o;415:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;454:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;859:181:5:-;917:7;937:9;953:1;949;:5;937:17;;978:1;973;:6;;965:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:1;1024:8;;;859:181;;;;:::o;96:958:2:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\nimport './Fish.sol';\r\nimport './FishRod.sol';\r\nimport './Market.sol';\r\ncontract FrenzyFish is FishRod,Market{\r\n  // Constructor\r\n    constructor () public {\r\n    }\r\n\r\n // Function to Fishing a new Fish into Structure \"FishModel\" with reference to msg.sender .\r\n    function Fishing() public returns(address){\r\n        require(UsersRod[msg.sender].Level != 0,\"Rod Must be Needed\");\r\n        address newfish = address(new Fish(msg.sender,UsersRod[msg.sender].Level));\r\n        Fishes[msg.sender].push(newfish);\r\n        return newfish;\r\n    }\r\n    //function to list all the fish of an account\r\n     function ListAllFishes() public view returns(address[] memory) {\r\n         return Fishes[msg.sender];\r\n     }\r\n      //function to get the details of a fish\r\n        function GetFishDetails(address fish) public view returns(uint256 _rarity,uint256 _weight,uint256 _price,bool _onOrder){\r\n        return Fish(fish).GetDetails();\r\n    }\r\n\r\n\r\n    // function RechargeUsingFish(address _Fish,uint256 _position) public{\r\n\r\n    // }\r\n\r\n}",
  "sourcePath": "E:/Hackathon/FishingFrenzy/contracts/FrenzyFish.sol",
  "ast": {
    "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        478
      ]
    },
    "id": 479,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 392,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 393,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 214,
        "src": "25:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 394,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 391,
        "src": "47:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/Market.sol",
        "file": "./Market.sol",
        "id": 395,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 853,
        "src": "72:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 396,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 390,
              "src": "119:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$390",
                "typeString": "contract FishRod"
              }
            },
            "id": 397,
            "nodeType": "InheritanceSpecifier",
            "src": "119:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 398,
              "name": "Market",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 852,
              "src": "127:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Market_$852",
                "typeString": "contract Market"
              }
            },
            "id": 399,
            "nodeType": "InheritanceSpecifier",
            "src": "127:6:2"
          }
        ],
        "contractDependencies": [
          213,
          390,
          852
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 478,
        "linearizedBaseContracts": [
          478,
          852,
          390
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "180:8:2",
              "statements": []
            },
            "documentation": null,
            "id": 403,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "170:2:2"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "180:0:2"
            },
            "scope": 478,
            "src": "158:30:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "332:233:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 409,
                              "name": "UsersRod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "351:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$228_storage_$",
                                "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                              }
                            },
                            "id": 412,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 410,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1057,
                                "src": "360:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "360:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "351:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rod_$228_storage",
                              "typeString": "struct FishRod.Rod storage ref"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Level",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 221,
                          "src": "351:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "381:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "351:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526f64204d757374206265204e6565646564",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "383:20:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        },
                        "value": "Rod Must be Needed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1060,
                        1061
                      ],
                      "referencedDeclaration": 1061,
                      "src": "343:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "343:61:2"
                },
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "415:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 424,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "450:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "450:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 426,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "461:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$228_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 429,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 427,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1057,
                                  "src": "470:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "470:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "461:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$228_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 221,
                            "src": "461:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "441:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$213_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 422,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 213,
                            "src": "445:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$213",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "441:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$213",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$213",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "433:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "433:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "524:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 434,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "500:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 437,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "507:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "507:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "500:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "500:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "500:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 442,
                    "name": "newfish",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "550:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 407,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "543:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:2:2"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "324:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:9:2"
            },
            "scope": 478,
            "src": "290:275:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "686:46:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 451,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "705:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "712:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "712:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "705:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 450,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "698:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:2:2"
            },
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "668:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "668:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "668:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "667:18:2"
            },
            "scope": 478,
            "src": "623:109:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "908:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 471,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "931:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 470,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "926:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$213_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "926:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$213",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 165,
                      "src": "926:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 469,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "919:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "813:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "812:14:2"
            },
            "returnParameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "847:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 464,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "863:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 466,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "879:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 468,
                  "name": "_onOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "894:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "846:62:2"
            },
            "scope": 478,
            "src": "789:168:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 479,
        "src": "96:958:2"
      }
    ],
    "src": "0:1054:2"
  },
  "legacyAST": {
    "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/FrenzyFish.sol",
    "exportedSymbols": {
      "FrenzyFish": [
        478
      ]
    },
    "id": 479,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 392,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/Fish.sol",
        "file": "./Fish.sol",
        "id": 393,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 214,
        "src": "25:20:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/FishRod.sol",
        "file": "./FishRod.sol",
        "id": 394,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 391,
        "src": "47:23:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/E/Hackathon/FishingFrenzy/contracts/Market.sol",
        "file": "./Market.sol",
        "id": 395,
        "nodeType": "ImportDirective",
        "scope": 479,
        "sourceUnit": 853,
        "src": "72:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 396,
              "name": "FishRod",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 390,
              "src": "119:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FishRod_$390",
                "typeString": "contract FishRod"
              }
            },
            "id": 397,
            "nodeType": "InheritanceSpecifier",
            "src": "119:7:2"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 398,
              "name": "Market",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 852,
              "src": "127:6:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Market_$852",
                "typeString": "contract Market"
              }
            },
            "id": 399,
            "nodeType": "InheritanceSpecifier",
            "src": "127:6:2"
          }
        ],
        "contractDependencies": [
          213,
          390,
          852
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 478,
        "linearizedBaseContracts": [
          478,
          852,
          390
        ],
        "name": "FrenzyFish",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 402,
              "nodeType": "Block",
              "src": "180:8:2",
              "statements": []
            },
            "documentation": null,
            "id": 403,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "170:2:2"
            },
            "returnParameters": {
              "id": 401,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "180:0:2"
            },
            "scope": 478,
            "src": "158:30:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 444,
              "nodeType": "Block",
              "src": "332:233:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 409,
                              "name": "UsersRod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 232,
                              "src": "351:8:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$228_storage_$",
                                "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                              }
                            },
                            "id": 412,
                            "indexExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 410,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1057,
                                "src": "360:3:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 411,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "360:10:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "351:20:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Rod_$228_storage",
                              "typeString": "struct FishRod.Rod storage ref"
                            }
                          },
                          "id": 413,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "Level",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 221,
                          "src": "351:26:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "381:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "351:31:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "526f64204d757374206265204e6565646564",
                        "id": 416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "383:20:2",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        },
                        "value": "Rod Must be Needed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6ba5d5835b7164705182524251dcc9dfff7c661d6f10ec9c6fac7cc6ab4d8fdd",
                          "typeString": "literal_string \"Rod Must be Needed\""
                        }
                      ],
                      "id": 408,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1060,
                        1061
                      ],
                      "referencedDeclaration": 1061,
                      "src": "343:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "343:61:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 418,
                  "nodeType": "ExpressionStatement",
                  "src": "343:61:2"
                },
                {
                  "assignments": [
                    420
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 420,
                      "name": "newfish",
                      "nodeType": "VariableDeclaration",
                      "scope": 444,
                      "src": "415:15:2",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 419,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "415:7:2",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 433,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 424,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1057,
                              "src": "450:3:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "450:10:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 426,
                                "name": "UsersRod",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 232,
                                "src": "461:8:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Rod_$228_storage_$",
                                  "typeString": "mapping(address => struct FishRod.Rod storage ref)"
                                }
                              },
                              "id": 429,
                              "indexExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 427,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1057,
                                  "src": "470:3:2",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 428,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "470:10:2",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "461:20:2",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Rod_$228_storage",
                                "typeString": "struct FishRod.Rod storage ref"
                              }
                            },
                            "id": 430,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Level",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 221,
                            "src": "461:26:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "NewExpression",
                          "src": "441:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_uint256_$returns$_t_contract$_Fish_$213_$",
                            "typeString": "function (address,uint256) returns (contract Fish)"
                          },
                          "typeName": {
                            "contractScope": null,
                            "id": 422,
                            "name": "Fish",
                            "nodeType": "UserDefinedTypeName",
                            "referencedDeclaration": 213,
                            "src": "445:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Fish_$213",
                              "typeString": "contract Fish"
                            }
                          }
                        },
                        "id": 431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "441:47:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$213",
                          "typeString": "contract Fish"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_Fish_$213",
                          "typeString": "contract Fish"
                        }
                      ],
                      "id": 421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "433:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": "address"
                    },
                    "id": 432,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "433:56:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "415:74:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 439,
                        "name": "newfish",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 420,
                        "src": "524:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 434,
                          "name": "Fishes",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 503,
                          "src": "500:6:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                            "typeString": "mapping(address => address[] storage ref)"
                          }
                        },
                        "id": 437,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 435,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1057,
                            "src": "507:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "507:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "500:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "500:23:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "500:32:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 441,
                  "nodeType": "ExpressionStatement",
                  "src": "500:32:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 442,
                    "name": "newfish",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 420,
                    "src": "550:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 407,
                  "id": 443,
                  "nodeType": "Return",
                  "src": "543:14:2"
                }
              ]
            },
            "documentation": null,
            "id": 445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "Fishing",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 404,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "306:2:2"
            },
            "returnParameters": {
              "id": 407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 406,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 445,
                  "src": "324:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "324:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "323:9:2"
            },
            "scope": 478,
            "src": "290:275:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "686:46:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 451,
                      "name": "Fishes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 503,
                      "src": "705:6:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_address_$dyn_storage_$",
                        "typeString": "mapping(address => address[] storage ref)"
                      }
                    },
                    "id": 454,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 452,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1057,
                        "src": "712:3:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "712:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "705:18:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 450,
                  "id": 455,
                  "nodeType": "Return",
                  "src": "698:25:2"
                }
              ]
            },
            "documentation": null,
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ListAllFishes",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "645:2:2"
            },
            "returnParameters": {
              "id": 450,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 449,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "668:16:2",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 447,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "668:7:2",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 448,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "668:9:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "667:18:2"
            },
            "scope": 478,
            "src": "623:109:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 476,
              "nodeType": "Block",
              "src": "908:49:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 471,
                            "name": "fish",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 459,
                            "src": "931:4:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 470,
                          "name": "Fish",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "926:4:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Fish_$213_$",
                            "typeString": "type(contract Fish)"
                          }
                        },
                        "id": 472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "926:10:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Fish_$213",
                          "typeString": "contract Fish"
                        }
                      },
                      "id": 473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "GetDetails",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 165,
                      "src": "926:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                        "typeString": "function () view external returns (uint256,uint256,uint256,bool)"
                      }
                    },
                    "id": 474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "926:23:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_bool_$",
                      "typeString": "tuple(uint256,uint256,uint256,bool)"
                    }
                  },
                  "functionReturnParameters": 469,
                  "id": 475,
                  "nodeType": "Return",
                  "src": "919:30:2"
                }
              ]
            },
            "documentation": null,
            "id": 477,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetFishDetails",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 460,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "name": "fish",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "813:12:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "813:7:2",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "812:14:2"
            },
            "returnParameters": {
              "id": 469,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 462,
                  "name": "_rarity",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "847:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 461,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "847:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 464,
                  "name": "_weight",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "863:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "863:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 466,
                  "name": "_price",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "879:14:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 465,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 468,
                  "name": "_onOrder",
                  "nodeType": "VariableDeclaration",
                  "scope": 477,
                  "src": "894:13:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 467,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:4:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "846:62:2"
            },
            "scope": 478,
            "src": "789:168:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 479,
        "src": "96:958:2"
      }
    ],
    "src": "0:1054:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {
    "4002": {
      "events": {},
      "links": {},
      "address": "0x5043591559d7a26A56480e61e50b3d1926edc77F",
      "transactionHash": "0x288ea35fbee5b57052162504bdd98a87432ad27d2d567da3bc41d23b9cb7e2c3"
    },
    "8995": {
      "events": {},
      "links": {},
      "address": "0xCfA146D3a1660203D351c663253e1A4EB188177c",
      "transactionHash": "0x725af09693d5b5a78665f6db53299331f188759b1d4ae27ce348357e17ea4dfa"
    }
  },
  "schemaVersion": "3.0.11",
  "updatedAt": "2019-10-06T08:22:11.465Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}